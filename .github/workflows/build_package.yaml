name: build package

on:
  schedule:
    - cron: "0 */6 * * *"
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-20.04
    container: emqx/build-env:erl23.2.7.2-emqx-3-ubuntu20.04

    outputs:
      profiles: ${{ steps.set_profile.outputs.profiles}}
      old_vsns: ${{ steps.set_profile.outputs.old_vsns}}

    steps:
      - uses: actions/checkout@v2
        with:
          path: source
          fetch-depth: 0
      - name: set profile
        id: set_profile
        shell: bash
        run: |
          cd source
          vsn="$(./pkg-vsn.sh)"
          pre_vsn="$(echo $vsn | grep -oE '^[0-9]+.[0-9]')"
          if make emqx-ee --dry-run > /dev/null 2>&1; then
            old_vsns="$(git tag -l "e$pre_vsn.[0-9]" | xargs echo -n | sed "s/e$vsn//")"
            echo "::set-output name=old_vsns::$old_vsns"
            echo "::set-output name=profiles::[\"emqx-ee\"]"
          else
            old_vsns="$(git tag -l "v$pre_vsn.[0-9]" | xargs echo -n | sed "s/v$vsn//")"
            echo "::set-output name=old_vsns::$old_vsns"
            echo "::set-output name=profiles::[\"emqx\", \"emqx-edge\"]"
          fi
      - name: get_all_deps
        if: endsWith(github.repository, 'emqx')
        run: |
          make -C source deps-all
          zip -ryq source.zip source/* source/.[^.]*
      - name: get_all_deps
        if: endsWith(github.repository, 'enterprise')
        run: |
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "${{ secrets.CI_GIT_TOKEN }}" >> source/scripts/git-token
          make -C source deps-all
          zip -ryq source.zip source/* source/.[^.]*
      - uses: actions/upload-artifact@v2
        with:
          name: source
          path: source.zip
          
  windows:
    runs-on: windows-2019

    needs: prepare
    if: endsWith(github.repository, 'emqx')

    strategy:
      matrix:
        profile: ${{fromJSON(needs.prepare.outputs.profiles)}}
        exclude:
          - profile: emqx-edge

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: source
          path: .
      - name: unzip source code
        run: Expand-Archive -Path source.zip -DestinationPath ./
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: gleam-lang/setup-erlang@v1.1.0
        id: install_erlang
        with:
          otp-version: 23.2
      - name: build
        env:
          PYTHON: python
          DIAGNOSTIC: 1
        run: |
          $env:PATH = "${{ steps.install_erlang.outputs.erlpath }}\bin;$env:PATH"

          $version = $( "${{ github.ref }}" -replace "^(.*)/(.*)/" )
          if ($version -match "^v[0-9]+\.[0-9]+(\.[0-9]+)?") {
            $regex = "[0-9]+\.[0-9]+(-alpha|-beta|-rc)?\.[0-9]+"
            $pkg_name = "${{ matrix.profile }}-windows-$([regex]::matches($version, $regex).value).zip"
            }
          else {
            $pkg_name = "${{ matrix.profile }}-windows-$($version -replace '/').zip"
            }
          cd source
          ## We do not build/release bcrypt for windows package
          Remove-Item -Recurse -Force -Path _build/default/lib/bcrypt/
          if (Test-Path rebar.lock) {
              Remove-Item -Force -Path rebar.lock
          }
          make ensure-rebar3
          copy rebar3 "${{ steps.install_erlang.outputs.erlpath }}\bin"
          ls "${{ steps.install_erlang.outputs.erlpath }}\bin"
          rebar3 --help
          make ${{ matrix.profile }}
          mkdir -p _packages/${{ matrix.profile }}
          Compress-Archive -Path _build/${{ matrix.profile }}/rel/emqx -DestinationPath _build/${{ matrix.profile }}/rel/$pkg_name
          mv _build/${{ matrix.profile }}/rel/$pkg_name _packages/${{ matrix.profile }}
          Get-FileHash -Path "_packages/${{ matrix.profile }}/$pkg_name" | Format-List | grep 'Hash' | awk '{print $3}'  > _packages/${{ matrix.profile }}/$pkg_name.sha256
      - name: run emqx
        timeout-minutes: 1
        run: |
          cd source
          ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx start
          Start-Sleep -s 5
          ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx stop
          ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx install
          ./_build/${{ matrix.profile }}/rel/emqx/bin/emqx uninstall
      - uses: actions/upload-artifact@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ matrix.profile }}
          path: source/_packages/${{ matrix.profile }}/.

  delete-artifact:
    runs-on: ubuntu-20.04
    needs: [prepare, windows]
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: source

  upload:
    runs-on: ubuntu-20.04

    if: startsWith(github.ref, 'refs/tags/')

    needs: [prepare, windows]

    strategy:
      matrix:
        profile: ${{fromJSON(needs.prepare.outputs.profiles)}}

    steps:
      - uses: actions/checkout@v2
      - name: get_version
        run: |
          echo 'version<<EOF' >> $GITHUB_ENV
          echo ${{ github.ref }} | sed -r  "s ^refs/heads/|^refs/tags/(.*) \1 g" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.profile }}
          path: ./_packages/${{ matrix.profile }}
      - name: install dos2unix
        run: sudo apt-get update && sudo apt install -y dos2unix
      - name: get packages
        run: |
          set -e -u
          cd _packages/${{ matrix.profile }}
          for var in $( ls |grep emqx |grep -v sha256); do
            dos2unix $var.sha256
            echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
          done
          cd -
      - uses: Rory-Z/upload-release-asset@v1
        if: matrix.profile != 'emqx-ee'
        with:
          repo: emqx
          path: "_packages/${{ matrix.profile }}/emqx-*"
          token: ${{ secrets.TOKEN }}
      
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ matrix.profile }}
